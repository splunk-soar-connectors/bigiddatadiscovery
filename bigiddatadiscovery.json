{
  "appid": "c6c71937-9ed9-443b-a375-05280423cae6",
  "name": "BigID Data Discovery",
  "description": "BigID is a next-gen data discovery and intelligence platform for the data you know and the data you don\u2019t know",
  "type": "information",
  "product_vendor": "BigiD",
  "logo": "bigiddatadiscovery.svg",
  "logo_dark": "bigiddatadiscovery_dark.svg",
  "product_name": "Discovery Foundation",
  "python_version": "3",
  "product_version_regex": ".*",
  "publisher": "BigID",
  "license": "Copyright (c) BigID, 2022",
  "app_version": "1.9.0",
  "utctime_updated": "2023-03-13T19:22:48.418638Z",
  "package_name": "phantom_bigiddatadiscovery",
  "main_module": "bigiddatadiscovery_connector.py",
  "min_phantom_version": "5.3.5.97812",
  "app_wizard_version": "1.0.0",
  "configuration": {
    "username": {
      "description": "BigID Username",
      "data_type": "string",
      "required": false,
      "value_list": [],
      "default": "",
      "order": 0,
      "name": "username",
      "id": 0
    },
    "password": {
      "description": "BigID Password",
      "data_type": "password",
      "required": false,
      "order": 1,
      "name": "password",
      "id": 1
    },
    "host": {
      "description": "BigID Host",
      "data_type": "string",
      "required": true,
      "value_list": [],
      "default": "",
      "order": 2,
      "name": "host",
      "id": 2
    },
    "accessToken": {
      "description": "BigID user access token",
      "data_type": "password",
      "required": false,
      "order": 3,
      "name": "accessToken",
      "id": 3
    }
  },
  "actions": [
    {
      "action": "test connectivity",
      "identifier": "test_connectivity",
      "description": "Validate the asset configuration for connectivity using supplied configuration",
      "verbose": "",
      "type": "test",
      "read_only": true,
      "parameters": {},
      "output": [],
      "versions": "EQ(*)"
    },
    {
      "action": "refresh session token",
      "identifier": "refresh_session_token",
      "description": "Refresh the session token",
      "verbose": "",
      "type": "generic",
      "read_only": false,
      "parameters": {},
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 0
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    },
    {
      "action": "get catalog data objects",
      "identifier": "get_catalog_data_objects",
      "description": "Get a full list of all data objects and their characteristics.",
      "verbose": "",
      "type": "investigate",
      "read_only": false,
      "parameters": {
        "filter": {
          "description": "search filter",
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 0,
          "name": "filter",
          "id": 1,
          "param_name": "filter"
        },
        "limit": {
          "description": "pagination limit",
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 1,
          "name": "limit",
          "id": 2,
          "param_name": "limit"
        },
        "offset": {
          "description": "number of records to skip",
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 2,
          "name": "offset",
          "id": 3,
          "param_name": "offset"
        }
      },
      "output": [
        {
          "data_path": "action_result.parameter.filter",
          "data_type": "string",
          "contains": [],
          "column_name": "filter",
          "column_order": 0
        },
        {
          "data_path": "action_result.parameter.limit",
          "data_type": "numeric",
          "contains": [],
          "column_name": "limit",
          "column_order": 1
        },
        {
          "data_path": "action_result.parameter.offset",
          "data_type": "numeric",
          "contains": [],
          "column_name": "offset",
          "column_order": 2
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 3
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    },
    {
      "action": "get pii findings",
      "identifier": "get_pii_findings",
      "description": "Retrieve all PII findings for a given list of data sources",
      "verbose": "",
      "type": "investigate",
      "read_only": false,
      "parameters": {
        "data_sources": {
          "description": "Comma delimited list of data source names",
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 0,
          "name": "data_sources",
          "id": 1,
          "param_name": "data_sources"
        }
      },
      "output": [
        {
          "data_path": "action_result.parameter.data_sources",
          "data_type": "string",
          "contains": [],
          "column_name": "data_sources",
          "column_order": 0
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 1
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    },
    {
      "action": "execute scan",
      "identifier": "execute_scan",
      "description": "Execute a scan for a given data source",
      "verbose": "",
      "type": "investigate",
      "read_only": false,
      "parameters": {
        "data_source_name": {
          "description": "Name of the data source",
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 0,
          "name": "data_source_name",
          "id": 1,
          "param_name": "data_source_name"
        }
      },
      "output": [
        {
          "data_path": "action_result.parameter.data_source_name",
          "data_type": "string",
          "contains": [],
          "column_name": "data_source_name",
          "column_order": 0
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 1
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    },
    {
      "action": "get last scan result",
      "identifier": "get_last_scan_result",
      "description": "Retrieve the most recent scan result for the data source",
      "verbose": "",
      "type": "investigate",
      "read_only": false,
      "parameters": {
        "data_source_name": {
          "description": "Name of the data source",
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": "",
          "order": 0,
          "name": "data_source_name",
          "id": 1,
          "param_name": "data_source_name"
        }
      },
      "output": [
        {
          "data_path": "action_result.parameter.data_source_name",
          "data_type": "string",
          "contains": [],
          "column_name": "data_source_name",
          "column_order": 0
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 1
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    },
    {
      "action": "get audit logs",
      "identifier": "get_audit_logs",
      "description": "Retrieve BigID audit logs",
      "verbose": "",
      "type": "investigate",
      "read_only": false,
      "parameters": {},
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "column_name": "status",
          "column_order": 0
        },
        { "data_path": "action_result.message", "data_type": "string" },
        { "data_path": "summary.total_objects", "data_type": "numeric" },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": { "type": "table" },
      "versions": "EQ(*)"
    }
  ],
  "custom_made": true,
  "directory": "bigiddatadiscovery_c6c71937-9ed9-443b-a375-05280423cae6",
  "version": 1,
  "appname": "-",
  "executable": "spawn3",
  "disabled": false,
  "copied_from_id": 23,
  "copied_from_version": "1.8.0",
  "pip3_dependencies": { "pypi": [{ "module": "requests" }] }
}
